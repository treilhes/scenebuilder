<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.gluonhq.jfxapps</groupId>
        <artifactId>scenebuilder.core</artifactId>
        <version>${scenebuilder.version}</version>
    </parent>
    <artifactId>scenebuilder.main</artifactId>
    <name>Scene Builder App</name>


    <properties>
        <main.class.name>com.oracle.javafx.scenebuilder.app.SceneBuilderApp</main.class.name>
        <!-- For about.properties file -->
        <buildDate>${maven.build.timestamp}</buildDate>
        <javaVersion>${java.vm.version}, ${java.vendor}</javaVersion>
        <javafxVersion>${javafx.version}</javafxVersion>
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>jfxapps.core.api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>jfxapps.core.ui</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>jfxapps.core.drag.and.drop</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>jfxapps.core.clipboard</artifactId>
        </dependency>
        <!--<dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>jfxapps.core.extension.api</artifactId>
        </dependency>-->
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>jfxapps.core.error</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>jfxapps.core.extension.store</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>jfxapps.core.filesystem</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>jfxapps.core.jobs</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>jfxapps.core.library</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>jfxapps.core.preferences</artifactId>
        </dependency>
        <!--<dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>jfxapps.core.launcher</artifactId>
        </dependency>-->
        <!-- Here starts non core dependencies but required for a core start-->
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>scenebuilder.ext.glossary</artifactId>
        </dependency>

        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>jfxapps.ext.menu</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>scenebuilder.ext.editor.fxml</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>scenebuilder.ext.editor.script</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>jfxapps.ext.preference.editor</artifactId>
        </dependency>
        

        <!-- Here starts optional dependencies but transitive-->

        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>jfxapps.ext.container</artifactId>
        </dependency>

        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>scenebuilder.ext.editors</artifactId>
        </dependency>
        
        <!-- Here starts optional dependencies -->
        <!-- -->


        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>jfxapps.ext.certificate.manager</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>scenebuilder.ext.controls</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>scenebuilder.ext.controls.tooling</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>scenebuilder.ext.css.analyser</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>scenebuilder.ext.debug.menu</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>scenebuilder.ext.defaultx</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>scenebuilder.ext.document</artifactId>
        </dependency>


        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>scenebuilder.ext.exporter</artifactId>
        </dependency>
        
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>scenebuilder.ext.help.features</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>scenebuilder.ext.inspector</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>scenebuilder.ext.library.image</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>scenebuilder.ext.library.control</artifactId>
        </dependency>

        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>scenebuilder.ext.preview</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>scenebuilder.ext.source.gen</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>scenebuilder.ext.source.view</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>scenebuilder.ext.templates</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>jfxapps.ext.update.manager</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>jfxapps.ext.log.viewer</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>jfxapps.ext.about</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>scenebuilder.ext.welcome</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>jfxapps.ext.scenicview</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>scenebuilder.ext.script</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>scenebuilder.ext.javafx.customization</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>scenebuilder.metadata.javafx15</artifactId>
        </dependency>

        <!-- SCRIPT ENGINE javascript START -->
        <!-- https://mvnrepository.com/artifact/org.openjdk.nashorn/nashorn-core -->
        <!-- <dependency> <groupId>org.graalvm.js</groupId> <artifactId>js</artifactId> <version>21.3.0</version> </dependency>
            <dependency> <groupId>org.graalvm.js</groupId> <artifactId>js-scriptengine</artifactId> <version>21.3.0</version> </dependency> -->
        <!-- SCRIPT ENGINE javascript END -->
        <!-- https://mvnrepository.com/artifact/org.openjdk.nashorn/nashorn-core
        <dependency>
            <groupId>org.openjdk.nashorn</groupId>
            <artifactId>nashorn-core</artifactId>
            <version>15.3</version>
        </dependency>
        -->
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-dependency-plugin</artifactId> <version>3.1.2</version>
                <executions> <execution> <id>list-deps</id> <phase>generate-sources</phase> <goals> <goal>list</goal> </goals> <configuration>
                configure the plugin here <outputFile>${project.build.directory}/generated-resources/core.libs</outputFile> <includeScope>runtime</includeScope>
                </configuration> </execution> </executions> </plugin> -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.4</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <artifactSet>
                                <excludes>
                                    <exclude>org.openjfx:*</exclude>
                                </excludes>
                            </artifactSet>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <outputFile>target/lib/scenebuilder-${project.version}-all.jar</outputFile>
                            <transformers>
                                <transformer
                                    implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>${main.class.name}</mainClass>
                                </transformer>
                                <transformer
                                    implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>