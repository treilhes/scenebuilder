<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.gluonhq.jfxapps</groupId>
        <artifactId>scenebuilder.metadata.javafx</artifactId>
        <version>${scenebuilder.version}</version>
    </parent>
    <artifactId>scenebuilder.metadata.javafxdata</artifactId>


    <properties>
        <!-- The latest available version of JavaFX -->
        <javafx.version>21</javafx.version>
    </properties>
    
    <dependencies>
        <!-- The goal for this dependency is to force the build of scenebuilder.metadata-maven-plugin -->
        <dependency>
            <groupId>com.gluonhq.jfxapps</groupId>
            <artifactId>jfxapps-metadata-maven-plugin</artifactId>
            <version>${jfxapps.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>update</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.gluonhq.jfxapps</groupId>
                        <artifactId>jfxapps-metadata-maven-plugin</artifactId>
                        <version>${jfxapps.version}</version>
                        <executions>
                            <execution>
                                <id>generate-class-resources</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>metadataResource</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <jarFilterPatterns>
                                <jarFilterPatterns>.*[/\\](javafx-(.*?))[/\\].*</jarFilterPatterns>
                            </jarFilterPatterns>
                            <rootClasses>
                                <rootClass>javafx.scene.Node</rootClass>
                                <rootClass>javafx.scene.Scene</rootClass>
                                <rootClass>javafx.scene.control.MenuItem</rootClass>
                                <rootClass>javafx.scene.control.Tab</rootClass>
                                <rootClass>javafx.scene.control.TableColumnBase</rootClass>
                                <rootClass>javafx.scene.control.TextFormatter</rootClass>
                                <rootClass>javafx.scene.layout.RowConstraints</rootClass>
                                <rootClass>javafx.scene.layout.ColumnConstraints</rootClass>
                                <rootClass>javafx.scene.shape.PathElement</rootClass>
                                <rootClass>javafx.stage.Window</rootClass>

                                <!-- <rootClass>javafx.animation.Animation</rootClass>
                                <rootClass>javafx.animation.KeyFrame</rootClass>
                                <rootClass>javafx.animation.KeyValue</rootClass>
                                <rootClass>javafx.animation.Transition</rootClass> -->

                            </rootClasses>
                            <excludeClasses>
                                <excludeClass>javafx.scene.control.Cell</excludeClass>
                            </excludeClasses>
                            <includePackages>
                                <includePackage>javafx</includePackage>
                            </includePackages>
                            <excludePackages>
                                <excludePackage>javafx.scene.control.skin</excludePackage>
                            </excludePackages>
                            <constructorOverrides>
                                <constructorOverride>
                                    <cls>javafx.scene.chart.BubbleChart</cls>
                                    <parameterOverrides>
                                        <parameterOverride>
                                            <cls>javafx.scene.chart.Axis</cls>
                                            <overridedBy>javafx.scene.chart.NumberAxis</overridedBy>
                                        </parameterOverride>
                                        <parameterOverride>
                                            <cls>javafx.scene.chart.Axis</cls>
                                            <overridedBy>javafx.scene.chart.NumberAxis</overridedBy>
                                        </parameterOverride>
                                    </parameterOverrides>
                                </constructorOverride>
                                <constructorOverride>
                                    <cls>javafx.scene.chart.StackedBarChart</cls>
                                    <parameterOverrides>
                                        <parameterOverride>
                                            <cls>javafx.scene.chart.Axis</cls>
                                            <overridedBy>javafx.scene.chart.CategoryAxis</overridedBy>
                                        </parameterOverride>
                                        <parameterOverride>
                                            <cls>javafx.scene.chart.Axis</cls>
                                            <overridedBy>javafx.scene.chart.NumberAxis</overridedBy>
                                        </parameterOverride>
                                    </parameterOverrides>
                                </constructorOverride>
                                <constructorOverride>
                                    <cls>javafx.scene.chart.StackedAreaChart</cls>
                                    <parameterOverrides>
                                        <parameterOverride>
                                            <cls>javafx.scene.chart.Axis</cls>
                                            <overridedBy>javafx.scene.chart.Axis</overridedBy>
                                        </parameterOverride>
                                        <parameterOverride>
                                            <cls>javafx.scene.chart.Axis</cls>
                                            <overridedBy>javafx.scene.chart.ValueAxis</overridedBy>
                                        </parameterOverride>
                                    </parameterOverrides>
                                </constructorOverride>
                                <constructorOverride>
                                    <cls>javafx.scene.chart.BarChart</cls>
                                    <parameterOverrides>
                                        <parameterOverride>
                                            <cls>javafx.scene.chart.Axis</cls>
                                            <overridedBy>javafx.scene.chart.CategoryAxis</overridedBy>
                                        </parameterOverride>
                                        <parameterOverride>
                                            <cls>javafx.scene.chart.Axis</cls>
                                            <overridedBy>javafx.scene.chart.NumberAxis</overridedBy>
                                        </parameterOverride>
                                    </parameterOverrides>
                                </constructorOverride>
                            </constructorOverrides>
                            <failOnError>true</failOnError>
                            <javafxVersion>${javafx.version}</javafxVersion>
                            <resourceFolder>./src/main/resources</resourceFolder>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>com.gluonhq.jfxapps</groupId>
                                <artifactId>scenebuilder.metadata.javafxdata</artifactId>
                                <version>${scenebuilder.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.openjfx</groupId>
                                <artifactId>javafx-fxml</artifactId>
                                <version>${javafx.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.openjfx</groupId>
                                <artifactId>javafx-web</artifactId>
                                <version>${javafx.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.openjfx</groupId>
                                <artifactId>javafx-swing</artifactId>
                                <version>${javafx.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>generate</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- Why using this plugin: When using scenebuilder.metadata-maven-plugin to build javafx metadata, the
                        native libraries are loaded but failed to be released when the build end. Running the build using maven-invoker-plugin allows
                        to create a forked process which will successfully release the lock on native libs -->
                    <plugin>
                        <artifactId>maven-invoker-plugin</artifactId>
                        <version>3.2.2</version>
                        <configuration>
                            <projectsDirectory>${basedir}/..</projectsDirectory>
                            <pomIncludes>
                                <pomInclude>scenebuilder.metadata.javafx11/pom.xml</pomInclude>
                                <pomInclude>scenebuilder.metadata.javafx15/pom.xml</pomInclude>
                            </pomIncludes>
                            <streamLogs>true</streamLogs>
                            <goals>
                                <goal>clean</goal>
                                <goal>install</goal>
                            </goals>
                            <mavenOpts>--add-opens java.base/java.lang=ALL-UNNAMED</mavenOpts>
                        </configuration>
                        <executions>
                            <execution>
                                <id>forked-install</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>