<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.gluonhq.jfxapps</groupId>
    <artifactId>parent</artifactId>
    <packaging>pom</packaging>
    <version>${jfxapps.version}</version>
    <name>Scene Builder</name>
    <description>Scene Builder is a visual, drag n drop, layout tool for
        designing JavaFX application user interfaces</description>
    <inceptionYear>2012</inceptionYear>
    <url>https://github.com/gluonhq/scenebuilder</url>

    <modules>
        <!--<module>dev.utils</module>
        <module>fxml.serializer</module>-->
        <module>jfxapps.app</module>
        <module>jfxapps.boot</module>
        <module>jfxapps.core</module>
        <module>jfxapps.ext</module>
        <module>jfxapps.metadata</module>
        <module>jfxapps.registry</module>

    </modules>

    <properties>
        <jfxapps.version>1.0.0-SNAPSHOT</jfxapps.version>

        <!-- compiler -->
        <maven.compiler.plugin.version>3.13.0</maven.compiler.plugin.version>
        <maven.compiler.release>21</maven.compiler.release>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>

        <maven-dependency-plugin.version>3.6.1</maven-dependency-plugin.version>
        <maven-failsafe-plugin.version>3.2.5</maven-failsafe-plugin.version>
        <maven-surefire-plugin.version>${maven-failsafe-plugin.version}</maven-surefire-plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <spring.boot.version>3.3.3</spring.boot.version>
        <org.mapstruct.version>1.6.2</org.mapstruct.version>
        <rxjavafx.version>3.0.2</rxjavafx.version>

    </properties>

    <repositories>
        <repository>
            <id>sonatype-snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </repository>
        <repository>
            <id>gluon-nexus</id>
            <url>https://nexus.gluonhq.com/nexus/content/repositories/releases/</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>

            <!-- jfxapps.boot -->
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.boot.api</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.boot.context</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.boot.jpa</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>spring.core.patch</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>spring.core.patch.link</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>org.hibernate.orm.core.patch</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>org.hibernate.orm.core.patch.link</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.boot.layer</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.boot.loader</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.boot.main</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.boot.maven</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.boot.platform</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.boot.registry</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.boot.starter</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.boot.starter.test</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>

            <!-- jfxapps.core -->
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.javafx.starter</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.core.api</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.core.clipboard</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.core.controls</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.core.drag.and.drop</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.core.error</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.core.extension.store</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.core.filesystem</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.core.fxom</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.core.jobs</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <!-- <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>scenebuilder.core.launcher</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>-->
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>javafx.fxml.patch</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>javafx.fxml.patch.link</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.core.library</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.core.metadata</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.core.preferences</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.core.selection</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.core.starter</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.core.starter.test</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.core.ui</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.core.utils</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>

            <!-- jfxapps.ext -->
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.ext.about</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.ext.about.api</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.ext.certificate.manager</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.ext.extension.library</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.ext.log.viewer</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.ext.menu</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.ext.preference.editor</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.ext.preference.editor.api</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.ext.update.manager</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.ext.container</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.ext.scenicview</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.ext.scenicview.api</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>

            <!-- jfxapps.registry -->
            <dependency>
                <groupId>com.gluonhq.jfxapps</groupId>
                <artifactId>jfxapps.registry.model</artifactId>
                <version>${jfxapps.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.mapstruct/mapstruct -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${org.mapstruct.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.pdfsam.rxjava3/rxjavafx -->
            <dependency>
                <groupId>org.pdfsam.rxjava3</groupId>
                <artifactId>rxjavafx</artifactId>
                <version>${rxjavafx.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>javadoc</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>3.0.0</version>
                        <inherited>false</inherited>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>${basedir}/docs/apidocs</directory>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <configuration>
                            <show>private</show>
                            <additionalOptions>
                                <option>--add-exports</option>
                                <option>
                                    javafx.graphics/com.sun.javafx.scene=scenebuilder.core</option>
                                <option>--add-exports</option>
                                <option>
                                    javafx.graphics/com.sun.javafx.geometry=scenebuilder.core</option>
                                <option>--add-exports</option>
                                <option>
                                    javafx.graphics/com.sun.javafx.scene=scenebuilder.ext.css.analyser</option>
                            </additionalOptions>
                            <!-- This property does not work for the aggregate
                            goal, doc-files are not present in the generated
                            javadoc, see workaround below -->
                            <docfilessubdirs>true</docfilessubdirs>
                            <javadocDirectory>${basedir}/src/main/java</javadocDirectory>
                            <outputDirectory>${basedir}/docs/apidocs</outputDirectory>
                            <reportOutputDirectory>${basedir}/docs/apidocs</reportOutputDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>aggregation</id>
                                <goals>
                                    <goal>aggregate</goal>
                                </goals>
                                <configuration>
                                    <aggregate>true</aggregate>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!-- Workaround for docfilessubdirs: this script copy
                        doc-files content into javadoc output directory
                            in
                        github_pages -->
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>groovy-maven-plugin</artifactId>
                        <version>2.1.1</version>
                        <executions>
                            <execution>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <source>aggregated_javadoc_fix.groovy</source>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <build>
        <plugins>
            <plugin>
                <!--
                This plugin has 2 internal usages:
                - generate a flattened version of the pom.xml in the repository, maven actions
                will use the flattened pom.xml as the effective pom reducing the
                number of roundtrip during dependency resolution and download
                - manage a centralize version for the project
                -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.6.0</version>
                 <configuration>
                    <flattenMode>bom</flattenMode> <!-- Resolve properties like ${jfxapps.version} -->
                    <!--<updatePomFile>true</updatePomFile>   Ensures the POM file is updated -->
                </configuration>
                <executions>
                    <!-- enable flattening -->
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <!-- ensure proper cleanup -->
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.gluonhq.jfxapps</groupId>
                    <artifactId>jfxapps-registry-maven-plugin</artifactId>
                    <version>${jfxapps.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-maven-plugin</artifactId>
                    <version>0.0.5</version>
                    <configuration>
                        <mainClass>${main.class.name}</mainClass>
                        <options>
                            <option>
                                --add-opens=javafx.fxml/javafx.fxml=ALL-UNNAMED</option>
                        </options>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                </plugin>
                <!-- Build KIT wherever parent is cleaned -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.plugin.version}</version>
                    <configuration>
                        <!--<useIncrementalCompilation>false</useIncrementalCompilation>-->
                        <compilerArgs>

                            <arg>--add-exports</arg>
                            <arg>
                                spring.core/org.springframework.core.patch=jfxapps.boot.layer</arg>
                            <arg>--add-exports</arg>
                            <arg>
                                javafx.graphics/com.sun.javafx.geometry=jfxapps.core.api</arg>
                            <arg>--add-exports</arg>
                            <arg>
                                javafx.graphics/com.sun.javafx.scene=jfxapps.core.api</arg>
                            <arg>--add-exports</arg>
                            <arg>
                                javafx.fxml/com.sun.javafx.fxml=jfxapps.core.fxom</arg>
                            <arg>--add-exports</arg>
                            <arg>
                                javafx.graphics/com.sun.javafx.geometry=scenebuilder.core.fxom</arg>

                            <arg>--add-exports</arg>
                            <arg>
                                javafx.graphics/com.sun.javafx.scene=scenebuilder.core.fxom</arg>
                            <arg>--add-exports</arg>
                            <arg>
                                javafx.graphics/com.sun.javafx.scene=scenebuilder.fxml.api</arg>

                            <arg>--add-exports</arg>
                            <arg>
                                javafx.graphics/com.sun.javafx.scene=scenebuilder.ext.css.analyser</arg>
                        </compilerArgs>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${org.mapstruct.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                    <executions>
                        <execution>
                            <id>test</id>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                            <configuration>
                                <compilerArgs>

                                    <arg>--add-exports</arg>
                                    <arg>
                                        javafx.graphics/com.sun.javafx.application=ALLUUU</arg>
                                    <arg>--add-exports</arg>
                                    <arg>
                                        javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</arg>
                                    <arg>--add-exports</arg>
                                    <arg>
                                        javafx.base/com.sun.javafx.beans=spring.core</arg>
                                </compilerArgs>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!--
                https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jar-plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>


                <!-- Deploy to Maven Central -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.0.0-M1</version>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                    <inherited>false</inherited>
                </plugin>

                <!-- Testing -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <systemPropertyVariables>
                            <javafx.allowjs>true</javafx.allowjs>
                        </systemPropertyVariables>
                        <useModulePath>false</useModulePath>
                        <argLine></argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <configuration>
                        <systemPropertyVariables>
                            <javafx.allowjs>true</javafx.allowjs>
                        </systemPropertyVariables>
                        <useModulePath>true</useModulePath>
                        <argLine></argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <!-- <version>3.3.0</version> -->
                    <version>3.3.1-SNAPSHOT</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-invoker-plugin</artifactId>
                    <version>3.8.0</version>
                </plugin>
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-dependency-plugin</artifactId>
                                        <versionRange>[1.0.0,)</versionRange>
                                        <goals>
                                            <goal>properties</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <execute>
                                            <runOnConfiguration>true</runOnConfiguration>
                                        </execute>
                                    </action>
                                </pluginExecution>

                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.codehaus.mojo</groupId>
                                        <artifactId>flatten-maven-plugin</artifactId>
                                        <versionRange>[1.0.0,)</versionRange>
                                        <goals>
                                            <goal>flatten</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>

                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-jar-plugin</artifactId>
                                        <versionRange>[1.0.0,)</versionRange>
                                        <goals>
                                            <goal>jar</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>

                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-invoker-plugin</artifactId>
                                        <versionRange>[1.0.0,)</versionRange>
                                        <goals>
                                            <goal>run</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>

                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>com.gluonhq.jfxapps</groupId>
                                        <artifactId>jfxapps-metadata-maven-plugin</artifactId>
                                        <versionRange>[0.0.0,)</versionRange>
                                        <goals>
                                            <goal>metadataSource</goal>
                                            <goal>metadataResource</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>com.gluonhq.jfxapps</groupId>
                                        <artifactId>jfxapps-registry-maven-plugin</artifactId>
                                        <versionRange>[0.0.0,)</versionRange>
                                        <goals>
                                            <goal>jfxappsRegistry</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-plugin-plugin</artifactId>
                                        <versionRange>[1.0.0,)</versionRange>
                                        <goals>
                                            <goal>descriptor</goal>
                                            <goal>helpmojo</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <execute />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <organization>
        <name>Gluon</name>
        <url>https://www.gluonhq.com</url>
    </organization>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/gluonhq/ChatApp/issues</url>
    </issueManagement>

    <licenses>
        <license>
            <name>BSD 3-Clause</name>
            <url>https://opensource.org/licenses/BSD-3-Clause</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Abhinay Agarwal</name>
            <email>abhinay.agarwal@gluonhq.com</email>
            <organization>Gluon</organization>
            <organizationUrl>https://www.gluonhq.com</organizationUrl>
        </developer>
        <developer>
            <name>Joeri Sykora</name>
            <email>joeri.sykora@gluonhq.com</email>
            <organization>Gluon</organization>
            <organizationUrl>https://www.gluonhq.com</organizationUrl>
        </developer>
        <developer>
            <name>Jos? Pereda</name>
            <email>jose.pereda@gluonhq.com</email>
            <organization>Gluon</organization>
            <organizationUrl>https://www.gluonhq.com</organizationUrl>
        </developer>
    </developers>

    <scm>
        <url>https://github.com/gluonhq/scenebuilder</url>
        <connection>scm:git:git://github.com/gluonhq/scenebuilder.git</connection>
        <developerConnection>
            scm:git:ssh://git@github.com:gluonhq/scenebuilder.git</developerConnection>
    </scm>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

</project>