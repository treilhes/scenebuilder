<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.gluonhq.scenebuilder</groupId>
    <artifactId>parent</artifactId>
    <packaging>pom</packaging>
    <version>17.0.0-SNAPSHOT</version>
    <name>Scene Builder</name>
    <description>Scene Builder is a visual, drag n drop, layout tool for designing JavaFX application user interfaces</description>
    <inceptionYear>2012</inceptionYear>
    <url>https://github.com/gluonhq/scenebuilder</url>

    <modules>
        <module>dev.utils</module>
        <module>scenebuilder.application</module>
        <module>scenebuilder.core</module>
        <module>scenebuilder.core.ext</module>
        <module>scenebuilder.fxml</module>
        <module>scenebuilder.fxml.ext</module>
        <module>scenebuilder.gluon</module>
        <module>scenebuilder.maven</module>
        <module>scenebuilder.metadata.generator</module>
        <module>scenebuilder.starter</module>
        <module>scenebuilder.starter.test</module>
    </modules>

    <properties>
        <javafx.version>16</javafx.version>
        <aether.version>1.1.0</aether.version>
        <charm.glisten.version>5.0.0-jdk9</charm.glisten.version>

        <!-- compiler -->
        <maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
        <maven.compiler.release>11</maven.compiler.release>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <junit.version>5.7.0</junit.version>
        <junit-platform.version>1.7.1</junit-platform.version>
        <jackson.version>2.11.3</jackson.version>
        <spring.boot.version>2.5.0</spring.boot.version>
        <testfx.junit.version>4.0.16-alpha</testfx.junit.version>
        <mockserver.jupiter.version>5.11.2</mockserver.jupiter.version>
    </properties>

    <repositories>
        <repository>
            <id>sonatype-snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </repository>
        <repository>
            <id>gluon-nexus</id>
            <url>https://nexus.gluonhq.com/nexus/content/repositories/releases/</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.application</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.core.api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.core.core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.core.drag.and.drop</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.core.clipboard</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.core.extension.api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.core.extension.store</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.core.error</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.core.filesystem</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.core.fxom</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.core.jobs</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.core.launcher</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.core.selection</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.core.ui</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.core.utils</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.core.library</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.core.metadata</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.core.preferences</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.menu</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.core.ext.certificate.manager</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.editor.fxml</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.editor.script</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.control.library</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.controls</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.controls.tooling</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.css.analyser</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.debug.menu</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.defaultx</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.document</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.editors</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.exporter</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.extension.library</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.glossary</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.gluon</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.help.features</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.image.library</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.inspector</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.log.viewer</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.preference.editor</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.preview</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.sb</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.source.gen</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.source.view</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.templates</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.update.manager</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.about</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.welcome</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.scenicview</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.starter</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.metadata.javafx15</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.metadata.gluon5</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.javafx.customization</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.ext.script</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.gluonhq.scenebuilder</groupId>
                <artifactId>scenebuilder.starter.test</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>javadoc</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>3.0.0</version>
                        <inherited>false</inherited>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>${basedir}/docs/apidocs</directory>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <configuration>
                            <show>private</show>
                            <additionalOptions>
                                <option>--add-exports</option>
                                <option>javafx.graphics/com.sun.javafx.scene=scenebuilder.core</option>
                                <option>--add-exports</option>
                                <option>javafx.graphics/com.sun.javafx.geometry=scenebuilder.core</option>
                                <option>--add-exports</option>
                                <option>javafx.graphics/com.sun.javafx.scene=scenebuilder.ext.css.analyser</option>
                            </additionalOptions>
                            <!-- This property does not work for the aggregate goal, doc-files are not present in the generated
                                javadoc, see workaround below -->
                            <docfilessubdirs>true</docfilessubdirs>
                            <javadocDirectory>${basedir}/src/main/java</javadocDirectory>
                            <outputDirectory>${basedir}/docs/apidocs</outputDirectory>
                            <reportOutputDirectory>${basedir}/docs/apidocs</reportOutputDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>aggregation</id>
                                <goals>
                                    <goal>aggregate</goal>
                                </goals>
                                <configuration>
                                    <aggregate>true</aggregate>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!-- Workaround for docfilessubdirs: this script copy doc-files content into javadoc output directory
                            in github_pages -->
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>groovy-maven-plugin</artifactId>
                        <version>2.1.1</version>
                        <executions>
                            <execution>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <source>aggregated_javadoc_fix.groovy</source>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-maven-plugin</artifactId>
                    <version>0.0.5</version>
                    <configuration>
                        <mainClass>${main.class.name}</mainClass>
                        <options>
                            <option>--add-opens=javafx.fxml/javafx.fxml=ALL-UNNAMED</option>
                        </options>
                    </configuration>
                </plugin>

                <!-- Build KIT wherever parent is cleaned -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.plugin.version}</version>
                    <configuration>
                        <useIncrementalCompilation>false</useIncrementalCompilation>
                        <compilerArgs>
                            <arg>--add-exports</arg>
                            <arg>javafx.graphics/com.sun.javafx.geometry=scenebuilder.core.fxom</arg>
                            <arg>--add-exports</arg>
                            <arg>javafx.graphics/com.sun.javafx.scene=scenebuilder.core.fxom</arg>
                            <arg>--add-exports</arg>
                            <arg>javafx.graphics/com.sun.javafx.scene=scenebuilder.core.api</arg>
                            <arg>--add-exports</arg>
                            <arg>javafx.fxml/com.sun.javafx.fxml=scenebuilder.core.fxom</arg>
                            <arg>--add-exports</arg>
                            <arg>javafx.graphics/com.sun.javafx.scene=scenebuilder.ext.css.analyser</arg>
                        </compilerArgs>
                    </configuration>
                    <executions>
                        <execution>
                            <id>test</id>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                            <configuration>
                                <compilerArgs>
                                    <arg>--add-exports</arg>
                                    <arg>javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</arg>
                                    <arg>--add-exports</arg>
                                    <arg>javafx.base/com.sun.javafx.beans=spring.core</arg>
                                </compilerArgs>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jar-plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>


                <!-- Deploy to Maven Central -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.0.0-M1</version>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                    <inherited>false</inherited>
                </plugin>

                <!-- Testing -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M5</version>
                    <configuration>
                        <useModulePath>false</useModulePath>
                        <argLine>
                            --illegal-access=permit
                        </argLine>
                        <!-- <reuseForks>false</reuseForks> <forkCount>1</forkCount> -->
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.0.0-M5</version>
                    <configuration>
                        <useModulePath>false</useModulePath>
                        <argLine>
                            --illegal-access=permit
                        </argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <!-- <version>3.3.0</version> -->
                    <version>3.3.1-SNAPSHOT</version>
                </plugin>
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>com.gluonhq.scenebuilder</groupId>
                                        <artifactId>scenebuilder.metadata-maven-plugin</artifactId>
                                        <versionRange>[1.0.0,)</versionRange>
                                        <goals>
                                            <goal>metadataSource</goal>
                                            <goal>metadataResource</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <organization>
        <name>Gluon</name>
        <url>https://www.gluonhq.com</url>
    </organization>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/gluonhq/ChatApp/issues</url>
    </issueManagement>

    <licenses>
        <license>
            <name>BSD 3-Clause</name>
            <url>https://opensource.org/licenses/BSD-3-Clause</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Abhinay Agarwal</name>
            <email>abhinay.agarwal@gluonhq.com</email>
            <organization>Gluon</organization>
            <organizationUrl>https://www.gluonhq.com</organizationUrl>
        </developer>
        <developer>
            <name>Joeri Sykora</name>
            <email>joeri.sykora@gluonhq.com</email>
            <organization>Gluon</organization>
            <organizationUrl>https://www.gluonhq.com</organizationUrl>
        </developer>
        <developer>
            <name>Jos? Pereda</name>
            <email>jose.pereda@gluonhq.com</email>
            <organization>Gluon</organization>
            <organizationUrl>https://www.gluonhq.com</organizationUrl>
        </developer>
    </developers>

    <scm>
        <url>https://github.com/gluonhq/scenebuilder</url>
        <connection>scm:git:git://github.com/gluonhq/scenebuilder.git</connection>
        <developerConnection>scm:git:ssh://git@github.com:gluonhq/scenebuilder.git</developerConnection>
    </scm>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

</project>